version "0.1"
group "com.nuonuo"

buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://mirrors.huaweicloud.com/repository/maven/' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'http://mirrors.163.com/maven/repository/maven-central' }
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
//        jcenter()
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:5.2.0"
//        classpath "io.freefair.gradle:lombok-plugin:4.1.6"
    }
}

allprojects {
    repositories {
        mavenLocal()
//        maven { url 'https://mirrors.huaweicloud.com/repository/maven/' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'http://mirrors.163.com/maven/repository/maven-central' }
        mavenCentral()
//        jcenter()
    }
}

apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
//apply plugin: "io.freefair.lombok"

// must behind plugins
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {

    //
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")

    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut.configuration:micronaut-openapi"
    annotationProcessor 'io.micronaut.data:micronaut-data-processor:1.0.0.M5'


    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")

    compile 'io.micronaut.data:micronaut-data-jdbc:1.0.0.M5'
    implementation 'io.micronaut.configuration:micronaut-jdbc-hikari'
    implementation 'mysql:mysql-connector-java:8.0.18'

    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.swagger.core.v3:swagger-annotations"
    implementation 'org.webjars:swagger-ui:3.24.3'
    implementation 'io.micronaut:micronaut-views'
    implementation 'org.thymeleaf:thymeleaf:3.0.11.RELEASE'


    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"

    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

test.classpath += configurations.developmentOnly

mainClassName = "com.nuonuo.Application"

// use JUnit 5 platform
test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=rapidoc.enabled=true,redoc.enabled=true,swagger-ui.enabled=true,swagger-ui.theme=flattop'
}


shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
